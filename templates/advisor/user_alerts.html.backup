{% extends 'base.html' %}
{% load static %}

{% block title %}{{ page_title }} - 補助金アドバイザー{% endblock %}

{% block extra_css %}
<style>
.alerts-header {
    background: linear-gradient(135deg, #fd7e14, #e65100);
    color: white;
    border-radius: 15px;
    padding: 30px;
    margin-bottom: 30px;
}

.alert-card {
    border: none;
    border-radius: 12px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
    transition: all 0.3s ease;
    margin-bottom: 15px;
    overflow: hidden;
}

.alert-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.12);
}

.alert-item {
    padding: 20px;
    border-left: 5px solid;
    position: relative;
    transition: all 0.2s ease;
}

.alert-item.unread {
    background: linear-gradient(90deg, #fff3cd, #ffffff);
    border-left-color: #ffc107;
}

.alert-item.read {
    background: #f8f9fa;
    border-left-color: #6c757d;
    opacity: 0.8;
}

.alert-item.high-priority {
    border-left-color: #dc3545;
}

.alert-item.medium-priority {
    border-left-color: #ffc107;
}

.alert-item.low-priority {
    border-left-color: #28a745;
}

.alert-header {
    display: flex;
    justify-content: between;
    align-items: flex-start;
    margin-bottom: 10px;
}

.alert-title {
    font-weight: 600;
    margin: 0;
    flex-grow: 1;
}

.alert-badges {
    display: flex;
    gap: 5px;
    margin-left: 15px;
}

.priority-badge {
    padding: 3px 8px;
    border-radius: 12px;
    font-size: 0.7rem;
    font-weight: bold;
}

.priority-high { background: #dc3545; color: white; }
.priority-medium { background: #ffc107; color: black; }
.priority-low { background: #28a745; color: white; }

.unread-badge {
    background: #007bff;
    color: white;
    padding: 2px 6px;
    border-radius: 10px;
    font-size: 0.7rem;
}

.alert-content {
    margin: 10px 0;
    line-height: 1.5;
}

.alert-meta {
    display: flex;
    justify-content: between;
    align-items: center;
    margin-top: 15px;
    padding-top: 10px;
    border-top: 1px solid #e9ecef;
    font-size: 0.85rem;
    color: #6c757d;
}

.alert-actions {
    display: flex;
    gap: 10px;
}

.alert-actions button {
    padding: 5px 10px;
    border: none;
    border-radius: 5px;
    font-size: 0.8rem;
    cursor: pointer;
    transition: all 0.2s ease;
}

.btn-mark-read {
    background: #28a745;
    color: white;
}

.btn-mark-read:hover {
    background: #218838;
}

.btn-dismiss {
    background: #6c757d;
    color: white;
}

.btn-dismiss:hover {
    background: #545b62;
}

.stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 20px;
    margin: 20px 0;
}

.stat-card {
    background: white;
    padding: 20px;
    border-radius: 12px;
    text-align: center;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
}

.stat-value {
    font-size: 2rem;
    font-weight: bold;
    margin: 10px 0;
}

.no-alerts {
    text-align: center;
    padding: 60px 20px;
    color: #6c757d;
}

.no-alerts i {
    font-size: 4rem;
    margin-bottom: 20px;
    opacity: 0.5;
}

.filter-tabs {
    background: white;
    border-radius: 10px;
    padding: 20px;
    margin-bottom: 20px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
}

.tab-button {
    background: transparent;
    border: 2px solid #e9ecef;
    border-radius: 25px;
    padding: 8px 20px;
    margin: 5px;
    transition: all 0.2s ease;
    cursor: pointer;
}

.tab-button.active {
    background: #007bff;
    color: white;
    border-color: #007bff;
}

.tab-button:hover {
    border-color: #007bff;
}

.feature-unavailable {
    background: linear-gradient(135deg, #6c757d, #495057);
    color: white;
    border-radius: 15px;
    padding: 40px;
    text-align: center;
    margin: 20px 0;
}

@media (max-width: 768px) {
    .alert-header {
        flex-direction: column;
        align-items: flex-start;
    }
    
    .alert-badges {
        margin-left: 0;
        margin-top: 10px;
    }
    
    .alert-meta {
        flex-direction: column;
        align-items: flex-start;
        gap: 10px;
    }
    
    .stats-grid {
        grid-template-columns: 1fr;
    }
}
</style>
{% endblock %}

{% block content %}
<div class="container-fluid">
    <!-- ヘッダー -->
    <div class="alerts-header text-center">
        <h1><i class="fas fa-bell"></i> {{ page_title }}</h1>
        <p class="lead mb-0">重要な補助金情報とお知らせを管理</p>
        {% if unread_count > 0 %}
            <small class="opacity-75">{{ unread_count }}件の未読アラートがあります</small>
        {% endif %}
    </div>

    {% if login_required %}
        <!-- ログインが必要な場合 -->
        <div class="feature-unavailable">
            <i class="fas fa-sign-in-alt fa-4x mb-4"></i>
            <h3>ログインが必要です</h3>
            <p class="lead mb-4">アラート機能を利用するにはログインしてください。</p>
            
            <div class="mt-4">
                <a href="{% url 'login' %}" class="btn btn-light btn-lg me-3">
                    <i class="fas fa-sign-in-alt"></i> ログイン
                </a>
                <a href="{% url 'advisor:index' %}" class="btn btn-outline-light">
                    <i class="fas fa-home"></i> メインページに戻る
                </a>
            </div>
        </div>

    {% elif alerts_available %}
        <!-- アラート機能が利用可能な場合 -->
        
        <!-- 統計サマリー -->
        {% if alert_stats %}
        <div class="stats-grid">
            <div class="stat-card">
                <i class="fas fa-envelope fa-2x text-primary"></i>
                <div class="stat-value text-primary">{{ alert_stats.total_alerts|default:0 }}</div>
                <h6>総アラート数</h6>
            </div>
            
            <div class="stat-card">
                <i class="fas fa-envelope-open fa-2x text-warning"></i>
                <div class="stat-value text-warning">{{ alert_stats.unread_count|default:0 }}</div>
                <h6>未読</h6>
            </div>
            
            <div class="stat-card">
                <i class="fas fa-exclamation-triangle fa-2x text-danger"></i>
                <div class="stat-value text-danger">{{ alert_stats.high_priority_count|default:0 }}</div>
                <h6>高優先度</h6>
            </div>
            
            <div class="stat-card">
                <i class="fas fa-archive fa-2x text-secondary"></i>
                <div class="stat-value text-secondary">{{ alert_stats.dismissed_count|default:0 }}</div>
                <h6>削除済み</h6>
            </div>
        </div>
        {% endif %}

        <!-- フィルタータブ -->
        <div class="filter-tabs">
            <h6 class="mb-3"><i class="fas fa-filter"></i> フィルター</h6>
            <button class="tab-button active" onclick="filterAlerts('all')">全て</button>
            <button class="tab-button" onclick="filterAlerts('unread')">未読</button>
            <button class="tab-button" onclick="filterAlerts('high')">高優先度</button>
            <button class="tab-button" onclick="filterAlerts('medium')">中優先度</button>
            <button class="tab-button" onclick="filterAlerts('low')">低優先度</button>
            
            <div class="float-end">
                <button class="btn btn-outline-primary btn-sm" onclick="markAllAsRead()">
                    <i class="fas fa-check-double"></i> 全て既読
                </button>
                <button class="btn btn-outline-secondary btn-sm" onclick="refreshAlerts()">
                    <i class="fas fa-sync-alt"></i> 更新
                </button>
            </div>
        </div>

        <!-- アラート一覧 -->
        <div id="alertsList">
            {% if alerts %}
                {% for alert in alerts %}
                    <div class="alert-card" data-priority="{{ alert.priority|default:'medium' }}" data-status="{% if alert.is_read %}read{% else %}unread{% endif %}">
                        <div class="alert-item {{ alert.priority|default:'medium' }}-priority {% if not alert.is_read %}unread{% else %}read{% endif %}">
                            <div class="alert-header">
                                <h6 class="alert-title">
                                    <i class="fas fa-{% if alert.priority == 'high' %}exclamation-triangle{% elif alert.priority == 'medium' %}info-circle{% else %}check-circle{% endif %}"></i>
                                    {{ alert.title|default:"新しい補助金情報" }}
                                </h6>
                                <div class="alert-badges">
                                    <span class="priority-badge priority-{{ alert.priority|default:'medium' }}">
                                        {{ alert.get_priority_display|default:"中" }}
                                    </span>
                                    {% if not alert.is_read %}
                                        <span class="unread-badge">未読</span>
                                    {% endif %}
                                </div>
                            </div>
                            
                            <div class="alert-content">
                                {{ alert.message|default:"新しい補助金制度が公開されました。詳細をご確認ください。" }}
                            </div>
                            
                            <div class="alert-meta">
                                <div>
                                    <i class="fas fa-clock"></i> 
                                    {{ alert.created_at|timesince|default:"1時間" }}前
                                    {% if alert.subsidy_type %}
                                        | <i class="fas fa-tag"></i> {{ alert.subsidy_type.name }}
                                    {% endif %}
                                </div>
                                <div class="alert-actions">
                                    {% if not alert.is_read %}
                                        <button class="btn-mark-read" onclick="markAsRead({{ alert.id|default:1 }})">
                                            <i class="fas fa-check"></i> 既読
                                        </button>
                                    {% endif %}
                                    <button class="btn-dismiss" onclick="dismissAlert({{ alert.id|default:1 }})">
                                        <i class="fas fa-times"></i> 削除
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            {% else %}
                <div class="no-alerts">
                    <i class="fas fa-bell-slash"></i>
                    <h4>アラートがありません</h4>
                    <p>現在、新しいアラートはありません。</p>
                    <a href="{% url 'advisor:chat_interface' %}" class="btn btn-primary">
                        <i class="fas fa-comments"></i> AI相談を開始
                    </a>
                </div>
            {% endif %}
        </div>

    {% else %}
        <!-- アラート機能が利用できない場合 -->
        <div class="feature-unavailable">
            <i class="fas fa-bell-slash fa-4x mb-4"></i>
            <h3>アラート機能</h3>
            <p class="lead mb-4">{{ message|default:"アラート機能は現在準備中です。" }}</p>
            
            {% if error_message %}
                <div class="alert alert-warning d-inline-block">
                    <i class="fas fa-exclamation-triangle"></i> {{ error_message }}
                </div>
            {% endif %}
            
            <div class="mt-4">
                <h5>利用可能になる機能：</h5>
                <div class="row mt-3">
                    <div class="col-md-6">
                        <ul class="list-unstyled text-start">
                            <li><i class="fas fa-check text-light me-2"></i> 新制度公開通知</li>
                            <li><i class="fas fa-check text-light me-2"></i> 申請期限リマインダー</li>
                            <li><i class="fas fa-check text-light me-2"></i> 条件合致の自動通知</li>
                        </ul>
                    </div>
                    <div class="col-md-6">
                        <ul class="list-unstyled text-start">
                            <li><i class="fas fa-check text-light me-2"></i> 優先度別フィルタリング</li>
                            <li><i class="fas fa-check text-light me-2"></i> カスタムアラート設定</li>
                            <li><i class="fas fa-check text-light me-2"></i> メール通知連携</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <!-- 代替機能 -->
        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header bg-light">
                        <h5 class="mb-0">
                            <i class="fas fa-lightbulb text-warning"></i> 現在利用可能
                        </h5>
                    </div>
                    <div class="card-body">
                        <p class="mb-3">アラート機能の準備中でも、以下の機能をご利用いただけます：</p>
                        
                        <div class="d-grid gap-2">
                            <a href="{% url 'advisor:chat_interface' %}" class="btn btn-primary">
                                <i class="fas fa-comments"></i> AI相談
                            </a>
                            <a href="{% url 'advisor:statistics' %}" class="btn btn-success">
                                <i class="fas fa-chart-bar"></i> 統計ダッシュボード
                            </a>
                            <a href="{% url 'advisor:prediction_dashboard' %}" class="btn btn-info">
                                <i class="fas fa-crystal-ball"></i> 予測ダッシュボード
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header bg-light">
                        <h5 class="mb-0">
                            <i class="fas fa-star text-warning"></i> アラート機能について
                        </h5>
                    </div>
                    <div class="card-body">
                        <p class="mb-3">準備完了後にご利用いただける機能：</p>
                        
                        <ul class="list-unstyled">
                            <li class="mb-2"><i class="fas fa-check text-success me-2"></i> リアルタイム通知</li>
                            <li class="mb-2"><i class="fas fa-check text-success me-2"></i> 個別設定可能</li>
                            <li class="mb-2"><i class="fas fa-check text-success me-2"></i> 優先度管理</li>
                            <li class="mb-2"><i class="fas fa-check text-success me-2"></i> 履歴管理</li>
                            <li class="mb-0"><i class="fas fa-check text-success me-2"></i> メール連携</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}
</div>
{% endblock %}

{% block extra_js %}
<script>
let currentFilter = 'all';

document.addEventListener('DOMContentLoaded', function() {
    // カードアニメーション
    const cards = document.querySelectorAll('.alert-card');
    cards.forEach((card, index) => {
        card.style.opacity = '0';
        card.style.transform = 'translateY(20px)';
        card.style.transition = `opacity 0.6s ease ${index * 0.1}s, transform 0.6s ease ${index * 0.1}s`;
        
        setTimeout(() => {
            card.style.opacity = '1';
            card.style.transform = 'translateY(0)';
        }, 100);
    });
});

function filterAlerts(filter) {
    currentFilter = filter;
    
    // タブの状態を更新
    document.querySelectorAll('.tab-button').forEach(btn => {
        btn.classList.remove('active');
    });
    event.target.classList.add('active');
    
    // アラートをフィルタリング
    const alerts = document.querySelectorAll('.alert-card');
    alerts.forEach(alert => {
        const priority = alert.dataset.priority;
        const status = alert.dataset.status;
        
        let show = false;
        
        switch(filter) {
            case 'all':
                show = true;
                break;
            case 'unread':
                show = status === 'unread';
                break;
            case 'high':
                show = priority === 'high';
                break;
            case 'medium':
                show = priority === 'medium';
                break;
            case 'low':
                show = priority === 'low';
                break;
        }
        
        if (show) {
            alert.style.display = 'block';
            setTimeout(() => {
                alert.style.opacity = '1';
                alert.style.transform = 'translateY(0)';
            }, 100);
        } else {
            alert.style.opacity = '0';
            alert.style.transform = 'translateY(-10px)';
            setTimeout(() => {
                alert.style.display = 'none';
            }, 300);
        }
    });
}

function markAsRead(alertId) {
    // 実装時にAJAXでサーバーに送信
    console.log('Marking alert as read:', alertId);
    
    // UIを更新
    const alertCard = document.querySelector(`[data-alert-id="${alertId}"]`);
    if (alertCard) {
        const alertItem = alertCard.querySelector('.alert-item');
        alertItem.classList.remove('unread');
        alertItem.classList.add('read');
        
        const unreadBadge = alertCard.querySelector('.unread-badge');
        if (unreadBadge) {
            unreadBadge.remove();
        }
        
        const markReadBtn = alertCard.querySelector('.btn-mark-read');
        if (markReadBtn) {
            markReadBtn.remove();
        }
        
        alertCard.dataset.status = 'read';
    }
    
    // 統計を更新
    updateStats();
    
    showToast('アラートを既読にしました', 'success');
}

function dismissAlert(alertId) {
    if (!confirm('このアラートを削除しますか？')) {
        return;
    }
    
    // 実装時にAJAXでサーバーに送信
    console.log('Dismissing alert:', alertId);
    
    // UIからアラートを削除
    const alertCard = document.querySelector(`[data-alert-id="${alertId}"]`);
    if (alertCard) {
        alertCard.style.opacity = '0';
        alertCard.style.transform = 'translateX(-100%)';
        
        setTimeout(() => {
            alertCard.remove();
            updateStats();
        }, 300);
    }
    
    showToast('アラートを削除しました', 'info');
}

function markAllAsRead() {
    if (!confirm('すべてのアラートを既読にしますか？')) {
        return;
    }
    
    // 実装時にAJAXでサーバーに送信
    console.log('Marking all alerts as read');
    
    // UIを更新
    const unreadAlerts = document.querySelectorAll('.alert-item.unread');
    unreadAlerts.forEach(alert => {
        alert.classList.remove('unread');
        alert.classList.add('read');
        
        const unreadBadge = alert.querySelector('.unread-badge');
        if (unreadBadge) {
            unreadBadge.remove();
        }
        
        const markReadBtn = alert.querySelector('.btn-mark-read');
        if (markReadBtn) {
            markReadBtn.remove();
        }
    });
    
    // データ属性も更新
    document.querySelectorAll('.alert-card').forEach(card => {
        card.dataset.status = 'read';
    });
    
    updateStats();
    showToast('すべてのアラートを既読にしました', 'success');
}

function refreshAlerts() {
    const button = event.target.closest('button');
    const originalText = button.innerHTML;
    
    button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> 更新中...';
    button.disabled = true;
    
    // 実装時にAJAXでデータを取得
    setTimeout(() => {
        button.innerHTML = originalText;
        button.disabled = false;
        showToast('アラートを更新しました', 'success');
        
        // 実際の実装では location.reload() またはAJAXでデータを更新
        // location.reload();
    }, 1500);
}

function updateStats() {
    // 統計カードの値を更新
    const totalAlerts = document.querySelectorAll('.alert-card').length;
    const unreadAlerts = document.querySelectorAll('.alert-card[data-status="unread"]').length;
    const highPriorityAlerts = document.querySelectorAll('.alert-card[data-priority="high"]').length;
    
    // 統計値を更新（DOM要素が存在する場合）
    const totalElement = document.querySelector('.stat-card .text-primary');
    const unreadElement = document.querySelector('.stat-card .text-warning');
    const highPriorityElement = document.querySelector('.stat-card .text-danger');
    
    if (totalElement) totalElement.textContent = totalAlerts;
    if (unreadElement) unreadElement.textContent = unreadAlerts;
    if (highPriorityElement) highPriorityElement.textContent = highPriorityAlerts;
}

function showToast(message, type = 'info') {
    const toast = document.createElement('div');
    toast.className = 'toast-notification';
    
    const colors = {
        success: '#28a745',
        info: '#17a2b8',
        warning: '#ffc107',
        error: '#dc3545'
    };
    
    toast.innerHTML = `<i class="fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-triangle' : 'info-circle'}"></i> ${message}`;
    toast.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: ${colors[type] || colors.info};
        color: white;
        padding: 15px 20px;
        border-radius: 8px;
        z-index: 1000;
        box-shadow: 0 4px 12px rgba(0,0,0,0.2);
        animation: slideInRight 0.3s ease;
    `;
    
    document.body.appendChild(toast);
    
    setTimeout(() => {
        toast.style.animation = 'slideOutRight 0.3s ease';
        setTimeout(() => {
            toast.remove();
        }, 300);
    }, 3000);
}

// CSSアニメーションを追加
const style = document.createElement('style');
style.textContent = `
    @keyframes slideInRight {
        from { transform: translateX(100%); opacity: 0; }
        to { transform: translateX(0); opacity: 1; }
    }
    
    @keyframes slideOutRight {
        from { transform: translateX(0); opacity: 1; }
        to { transform: translateX(100%); opacity: 0; }
    }
`;
document.head.appendChild(style);
</script>
{% endblock %}